kind: pipeline
type: docker
name: app-template

trigger:
  event:
    - push
#    - pull_request

steps:
  - name: 检查和测试
    image: golang:latest
    volumes:
      - name: tools-cache
        path: /tmp/tools-cache
    commands:
      - uname -sr
      - export GOPROXY=https://goproxy.io,direct
      - export GOPATH=/tmp/tools-cache/golang/gopath
      - cp /tmp/tools-cache/golang/golangci-lint/golangci-lint /usr/local/bin
      #- go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.43.0
      - make lint
      - make test

  - name: 构建和打包
    image: golang:latest
    volumes:
      - name: artifacts-cache
        path: /tmp/artifacts-cache
      - name: tools-cache
        path: /tmp/tools-cache
    commands:
      - uname -sr
      - export GOPROXY=https://goproxy.io,direct
      - export GOPATH=/tmp/tools-cache/golang/gopath
      - make build
      - mkdir -p /tmp/artifacts-cache/app-template
      - env
      - cp /output/app-template /tmp/artifacts-cache/app-template/app-template-${CI_COMMIT_SHA}
    when:
      status:
        - success
      branch:
        - main
        - develop

  - name: 构建镜像
    image: docker:latest
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      harbor_host:
        from_secret: harbor_host
      harbor_username:
        from_secret: harbor_username
      harbor_password:
        from_secret: harbor_password
    commands:
      - echo "waiting 10 seconds..." && sleep 10
      - docker info
      - docker login -u $$harbor_username -p $$harbor_password $$harbor_host
      - export HARBOR_HOST=$$harbor_host
      - export REPO_BRANCH=$(echo ${DRONE_BRANCH} |tr -d '/')
      - export SHORT_COMMIT_ID=$(echo ${CI_COMMIT_SHA}|cut -c1-8)
      - echo "waiting 3 seconds..." && sleep 3
      - |
        docker build --tag $${HARBOR_HOST}/repo/app-template:$${SHORT_COMMIT_ID} \
          --build-arg EXTRA_BUILD_ARGS=-mod=vendor \
          --build-arg COMMIT_ID=${CI_COMMIT_SHA} \
          --build-arg COMMIT_TAG=${CI_COMMIT_TAG} \
          --build-arg VCS_BRANCH=$${REPO_BRANCH} \
          --build-arg VERSION=$${SHORT_COMMIT_ID} .
      - |
        docker push $${HARBOR_HOST}/repo/app-template:$${SHORT_COMMIT_ID}
      - |
        docker rmi -f $(docker image ls |grep $${SHORT_COMMIT_ID} |awk '{print $3}')
    when:
      status:
        - success
      branch:
        - main
        - develop

  - name: 钉钉通知
    image: guoxudongdocker/drone-dingtalk
    settings:
      token:
        from_secret: dingtalk_token
      type: markdown
      message_color: true
      message_pic: true
      sha_link: true
    when:
      status: [ failure, success ]

volumes:
  - name: artifacts-cache
    host:
      path: /workspace/artifacts
  - name: tools-cache
    host:
      path: /workspace/tools-cache
  - name: dockersock
    host:
      path: /var/run/docker.sock
